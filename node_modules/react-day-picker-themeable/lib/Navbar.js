'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavbarPropTypes = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = Navbar;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _PropTypes = require('./PropTypes');

var _PropTypes2 = _interopRequireDefault(_PropTypes);

var _createStylingFromTheme = require('./createStylingFromTheme');

var _createStylingFromTheme2 = _interopRequireDefault(_createStylingFromTheme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Navbar(_ref) {
  var styling = _ref.styling;
  var showPreviousButton = _ref.showPreviousButton;
  var showNextButton = _ref.showNextButton;
  var onPreviousClick = _ref.onPreviousClick;
  var onNextClick = _ref.onNextClick;
  var dir = _ref.dir;
  var theme = _ref.theme;
  var invertTheme = _ref.invertTheme;

  var previousClickHandler = dir === 'rtl' ? onNextClick : onPreviousClick;
  var nextClickHandler = dir === 'rtl' ? onPreviousClick : onNextClick;

  var navBarStyling = styling || (0, _createStylingFromTheme2.default)(theme, invertTheme);

  var previousButton = showPreviousButton && _react2.default.createElement('span', _extends({
    role: 'button',
    key: 'previous'
  }, navBarStyling('dayPickerNavButton', 'prev'), {
    onClick: function onClick() {
      return previousClickHandler();
    }
  }));

  var nextButton = showNextButton && _react2.default.createElement('span', _extends({
    role: 'button',
    key: 'right'
  }, navBarStyling('dayPickerNavButton', 'next'), {
    onClick: function onClick() {
      return nextClickHandler();
    }
  }));

  return _react2.default.createElement(
    'div',
    navBarStyling('dayPickerNavBar', dir),
    dir === 'rtl' ? [nextButton, previousButton] : [previousButton, nextButton]
  );
}

var NavbarPropTypes = exports.NavbarPropTypes = {
  styling: _react.PropTypes.func,
  theme: _react.PropTypes.any,
  invertTheme: _react.PropTypes.bool,
  nextMonth: _react.PropTypes.instanceOf(Date),
  previousMonth: _react.PropTypes.instanceOf(Date),
  showPreviousButton: _react.PropTypes.bool,
  showNextButton: _react.PropTypes.bool,
  onPreviousClick: _react.PropTypes.func,
  onNextClick: _react.PropTypes.func,
  dir: _react.PropTypes.string,
  locale: _react.PropTypes.string,
  localeUtils: _PropTypes2.default.localeUtils
};

Navbar.propTypes = NavbarPropTypes;

Navbar.defaultProps = {
  dir: 'ltr',
  showPreviousButton: true,
  showNextButton: true
};
//# sourceMappingURL=Navbar.js.map